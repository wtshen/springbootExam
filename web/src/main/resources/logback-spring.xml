<?xml version="1.0" encoding="utf-8" ?>
<configuration>

    <!-- 配置项，规则，通过这个节点内容配置，我们可以配置输出位置（控制台，文件），输出格式等 -->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d -- %msg%n</pattern>
        </layout>
    </appender>

    <!-- 按照日期来输出日志，因此如下配置了每天一个日志到指定位置 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>ERROR</level>
            <!--如果匹配，则禁止-->
            <onMatch>DENY</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>%d -- %msg%n</pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>e:/logs/info-%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <!-- error的日志区分到两个文件放置 -->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--添加 范围 过滤-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>%d -- %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>e:/logs/error-%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <!-- 根节点，表明整个项目基本的日志级别，里面可以应用多个appender规则 -->
    <root level="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>
</configuration>